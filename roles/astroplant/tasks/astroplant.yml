---
- name: Clone AstroPlant into the configured directory.
  git:
    repo: "{{ astroplant_server_repo }}"
    dest: "{{ astroplant_server_dir }}"
    version: "{{ astroplant_server_version }}"
    update: "{{ astroplant_server_keep_updated }}"
    force: yes

- name: Give astroplant user access to the AstroPlant application directory
  file:
    path: "{{ astroplant_server_dir }}"
    owner: astroplant
    mode: 0744
    recurse: yes
    state: directory

- name: Set AstroPlant Python requirements path.
  set_fact:
    astroplant_server_requirements: "{{ astroplant_server_dir }}/requirements.txt"

- name: Install Python requirements.
  pip: 
    requirements: "{{ astroplant_server_requirements }}"
    state: forcereinstall
    virtualenv: /home/astroplant/astro_venv
    virtualenv_python: python3.4

- name: Install npm packages.
  npm:
    path: "{{ astroplant_server_dir }}"
    state: latest

- name: Build static files.
  command: npm run-script build
  args:
    chdir: "{{ astroplant_server_dir }}"
  environment:
    NODE_ENV: production

- name: Ensure static file webroot directory exists.
  file:
    path: "/var/www/astroplant"
    owner: www-data
    group: www-data
    mode: 0744
    recurse: yes
    state: directory

- name: Collect static files.
  shell: . /home/astroplant/astro_venv/bin/activate && python manage.py collectstatic --no-input --clear
  args:
    chdir: "{{ astroplant_server_dir }}"

- name: Copy uwsgi configuration.
  template:
    src: uwsgi.ini.j2
    dest: /home/astroplant/uwsgi.ini
    owner: astroplant
    mode: 0755

- name: Copy Nginx configuration.
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    mode: 0700
  notify: restart mysql

"""
Django settings for server project.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "{{ astroplant_secret_key }}"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

{% if astroplant_admins is defined %}
ADMINS = [{% for admin in astroplant_admins %}('{{ admin.name }}', '{{ admin.email }}'),{% endfor %}]
{% endif %}

SERVER_EMAIL = "errors@my.astroplant.io"

ALLOWED_HOSTS = ["{{ astroplant_host }}",]

# Application definition

INSTALLED_APPS = [
    # Own apps (place them first, so our templates overwrite built-in and third party templates)
    'website',
    'backend',
    # Autocomplete
    'dal',
    'dal_select2',
    # Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Third party apps
    'bootstrap4',
    'braces',
    'django_gravatar',
    'rules.apps.AutodiscoverRulesConfig',
    'rest_framework',
    'channels',
    'channels_api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'server.urls'
ASGI_APPLICATION = 'backend.routing.application'
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_ipc.IPCChannelLayer",
        "CONFIG": {
            "prefix": "astroplant",
            "capacity": 500
        },
    },
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'astroplant',
        'USER': 'astroplant',
        'PASSWORD': '{{ astroplant_mysql_password }}',
        'PORT': '',
    },
}

# REST Framework

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoObjectPermissions'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'backend.auth.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}


## JSON Web Tokens (for API authentication)
JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=600),
    'JWT_ALLOW_REFRESH': True,
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/var/www/astroplant/static/'

# Authentication
AUTHENTICATION_BACKENDS = (
    'rules.permissions.ObjectPermissionBackend',
    'backend.auth.PersonOrKitBackend',
)

AUTH_USER_MODEL = 'backend.User'

# Accounts and registration
ACCOUNT_ACTIVATION_DAYS = 14
LOGIN_REDIRECT_URL = '/dashboard'

# Email backend
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = 'no-reply@my.astroplant.io'

# Timezones
USE_TZ = True

# Gravatar
GRAVATAR_DEFAULT_IMAGE = 'identicon'

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'standard': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%%Y-%b-%d %H:%M:%S"
        },
    },
    'handlers': {
        'logfile': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR + '/log',
            'maxBytes': 50000,
            'backupCount': 2,
            'formatter': 'standard',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['logfile', 'mail_admins',],
            'level': 'DEBUG',
            'propagate': True,
        },
        'backend': {
            'handlers': ['logfile', 'mail_admins',],
            'level': 'DEBUG',
            'propagate': True,
        },
        'server': {
            'handlers': ['logfile', 'mail_admins',],
            'level': 'DEBUG',
            'propagate': True,
        },
        'website': {
            'handlers': ['logfile', 'mail_admins',],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
